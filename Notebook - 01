{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1aAUVOdEmOQfE0O7dn7tbS5qZG6U7ext1","authorship_tag":"ABX9TyPCcU14QJ0RevFCkCLQFSwu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ybblwDYtJJt2"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["# Upload datasets\n","from google.colab import files\n","uploaded = files.upload()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"yIgugDt_Qvxn","executionInfo":{"status":"ok","timestamp":1754801294053,"user_tz":-330,"elapsed":608788,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"694b388b-ba64-41d1-a1c1-fba835ed307c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-449dbbf6-bc97-4cd5-86ba-36d3b729c336\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-449dbbf6-bc97-4cd5-86ba-36d3b729c336\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving historical_data.csv to historical_data.csv\n"]}]},{"cell_type":"markdown","source":["## **Understanding Data to Analyze it**"],"metadata":{"id":"BA1Tb3ZTgi4z"}},{"cell_type":"code","source":["trader_df = pd.read_csv(\"historical_data.csv\")\n","sentiment_df = pd.read_csv(\"fear_greed_index.csv\")"],"metadata":{"id":"FSCobUCyRTel"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trader_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CWg6zpIWVqZs","executionInfo":{"status":"ok","timestamp":1754801824046,"user_tz":-330,"elapsed":35,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"67d4e1b7-80bb-467c-af89-1e1f12587c5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(211224, 16)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["trader_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eqr-LQ12Vw6u","executionInfo":{"status":"ok","timestamp":1754801841275,"user_tz":-330,"elapsed":34,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"518f238b-9cbc-4025-8e0e-f87b8bab5a43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Account', 'Coin', 'Execution Price', 'Size Tokens', 'Size USD', 'Side',\n","       'Timestamp IST', 'Start Position', 'Direction', 'Closed PnL',\n","       'Transaction Hash', 'Order ID', 'Crossed', 'Fee', 'Trade ID',\n","       'Timestamp'],\n","      dtype='object')"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["trader_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"YuFJfxgTTuVR","executionInfo":{"status":"ok","timestamp":1754801559352,"user_tz":-330,"elapsed":122,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"126c2884-34ae-4649-a8a6-eabe8d3da39b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                      Account  Coin  Execution Price  \\\n","0  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9769   \n","1  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9800   \n","2  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9855   \n","\n","   Size Tokens  Size USD Side     Timestamp IST  Start Position Direction  \\\n","0       986.87   7872.16  BUY  02-12-2024 22:50        0.000000       Buy   \n","1        16.00    127.68  BUY  02-12-2024 22:50      986.524596       Buy   \n","2       144.09   1150.63  BUY  02-12-2024 22:50     1002.518996       Buy   \n","\n","   Closed PnL                                   Transaction Hash     Order ID  \\\n","0         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","1         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","2         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","\n","   Crossed       Fee      Trade ID     Timestamp  \n","0     True  0.345404  8.950000e+14  1.730000e+12  \n","1     True  0.005600  4.430000e+14  1.730000e+12  \n","2     True  0.050431  6.600000e+14  1.730000e+12  "],"text/html":["\n","  <div id=\"df-8123295c-9cf8-4e38-8f8c-a545875a184d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account</th>\n","      <th>Coin</th>\n","      <th>Execution Price</th>\n","      <th>Size Tokens</th>\n","      <th>Size USD</th>\n","      <th>Side</th>\n","      <th>Timestamp IST</th>\n","      <th>Start Position</th>\n","      <th>Direction</th>\n","      <th>Closed PnL</th>\n","      <th>Transaction Hash</th>\n","      <th>Order ID</th>\n","      <th>Crossed</th>\n","      <th>Fee</th>\n","      <th>Trade ID</th>\n","      <th>Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9769</td>\n","      <td>986.87</td>\n","      <td>7872.16</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>0.000000</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.345404</td>\n","      <td>8.950000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9800</td>\n","      <td>16.00</td>\n","      <td>127.68</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>986.524596</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.005600</td>\n","      <td>4.430000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9855</td>\n","      <td>144.09</td>\n","      <td>1150.63</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>1002.518996</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.050431</td>\n","      <td>6.600000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8123295c-9cf8-4e38-8f8c-a545875a184d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8123295c-9cf8-4e38-8f8c-a545875a184d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8123295c-9cf8-4e38-8f8c-a545875a184d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9aac8b86-ae8d-4eb1-a9d3-45602a8eea9d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9aac8b86-ae8d-4eb1-a9d3-45602a8eea9d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9aac8b86-ae8d-4eb1-a9d3-45602a8eea9d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"trader_df"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["sentiment_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"3gAqklGFT2Ss","executionInfo":{"status":"ok","timestamp":1754801572084,"user_tz":-330,"elapsed":70,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"8a11f3bf-5c8a-4779-9b94-f8bf9014939b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    timestamp  value classification        date\n","0  1517463000     30           Fear  2018-02-01\n","1  1517549400     15   Extreme Fear  2018-02-02\n","2  1517635800     40           Fear  2018-02-03"],"text/html":["\n","  <div id=\"df-97563cf6-2465-4ecc-8dc8-90ada5a18d8e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>timestamp</th>\n","      <th>value</th>\n","      <th>classification</th>\n","      <th>date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1517463000</td>\n","      <td>30</td>\n","      <td>Fear</td>\n","      <td>2018-02-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1517549400</td>\n","      <td>15</td>\n","      <td>Extreme Fear</td>\n","      <td>2018-02-02</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1517635800</td>\n","      <td>40</td>\n","      <td>Fear</td>\n","      <td>2018-02-03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97563cf6-2465-4ecc-8dc8-90ada5a18d8e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97563cf6-2465-4ecc-8dc8-90ada5a18d8e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97563cf6-2465-4ecc-8dc8-90ada5a18d8e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5f9b32ff-49d6-4fc6-8291-3465750ddf4e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f9b32ff-49d6-4fc6-8291-3465750ddf4e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5f9b32ff-49d6-4fc6-8291-3465750ddf4e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sentiment_df","summary":"{\n  \"name\": \"sentiment_df\",\n  \"rows\": 2644,\n  \"fields\": [\n    {\n      \"column\": \"timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65979674,\n        \"min\": 1517463000,\n        \"max\": 1746163800,\n        \"num_unique_values\": 2644,\n        \"samples\": [\n          1594531800,\n          1613626200,\n          1630819800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 5,\n        \"max\": 95,\n        \"num_unique_values\": 90,\n        \"samples\": [\n          61,\n          47,\n          65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Extreme Fear\",\n          \"Extreme Greed\",\n          \"Neutral\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 2644,\n        \"samples\": [\n          \"2020-07-12\",\n          \"2021-02-18\",\n          \"2021-09-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["sentiment_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jRQYRkXaUG6g","executionInfo":{"status":"ok","timestamp":1754801854000,"user_tz":-330,"elapsed":27,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"328e9972-4ed6-47d7-c04d-bbaae244cdef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2644, 4)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["sentiment_df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7wNGX1beVZz6","executionInfo":{"status":"ok","timestamp":1754801859452,"user_tz":-330,"elapsed":25,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"24bc2faf-dfce-4e4e-f879-9004a6f6ff77"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['timestamp', 'value', 'classification', 'date'], dtype='object')"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# Convert both to datetime\n","\n","trader_df['date'] = pd.to_datetime(trader_df['Timestamp'], errors='coerce').dt.date\n","sentiment_df['date'] = pd.to_datetime(sentiment_df['date'], errors='coerce').dt.date"],"metadata":{"id":"_DRjG5isV2m3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merge_df = pd.merge(\n","    trader_df,\n","    sentiment_df[['date', 'value', 'classification']],\n","    on='date',\n","    how='left'\n",")"],"metadata":{"id":"HlLq9CxLV7l8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"\\nMerged Shape:\", merge_df.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2FTDnjRXX_R","executionInfo":{"status":"ok","timestamp":1754804407780,"user_tz":-330,"elapsed":24,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"55b68410-5b2f-4a06-c371-7f313b449986"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Merged Shape: (211224, 19)\n"]}]},{"cell_type":"code","source":["print(\"Missing Sentiment Rows:\", merge_df['classification'].isna().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dfaqnj4cfkra","executionInfo":{"status":"ok","timestamp":1754804419027,"user_tz":-330,"elapsed":28,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"c71e098b-ae35-4c4c-f0a4-003834ab02e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing Sentiment Rows: 211224\n"]}]},{"cell_type":"code","source":["print(\"Trader date range:\", trader_df['date'].min(), \"to\", trader_df['date'].max())\n","print(\"Sentiment date range:\", sentiment_df['date'].min(), \"to\", sentiment_df['date'].max())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sQYJSQC2fnVA","executionInfo":{"status":"ok","timestamp":1754804469629,"user_tz":-330,"elapsed":58,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"42ab0f5b-0b84-4ef6-a145-3a7ef45b298e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Trader date range: 1970-01-01 to 1970-01-01\n","Sentiment date range: 2018-02-01 to 2025-05-02\n"]}]},{"cell_type":"code","source":["trader_df['Timestamp'].head(10)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"SpNiB7kUfz2U","executionInfo":{"status":"ok","timestamp":1754804564801,"user_tz":-330,"elapsed":61,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"819d6aaf-8751-4dd1-9b73-79e4a6c958a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1.730000e+12\n","1    1.730000e+12\n","2    1.730000e+12\n","3    1.730000e+12\n","4    1.730000e+12\n","5    1.730000e+12\n","6    1.730000e+12\n","7    1.730000e+12\n","8    1.730000e+12\n","9    1.730000e+12\n","Name: Timestamp, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1.730000e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["trader_df['date'] = pd.to_datetime(trader_df['Timestamp'], unit='ms').dt.date\n","sentiment_df['date'] = pd.to_datetime(sentiment_df['date']).dt.date"],"metadata":{"id":"JH-ok3g4gLFD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Merge on date\n","merge_df = pd.merge(trader_df, sentiment_df, on='date', how='left')\n","\n","# Check missing\n","print(\"Missing Sentiment Rows:\", merge_df['classification'].isna().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRjnUw0FgUEd","executionInfo":{"status":"ok","timestamp":1754804620341,"user_tz":-330,"elapsed":95,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"49181f30-b0f0-431d-e8ea-7a5d053aa676"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing Sentiment Rows: 26961\n"]}]},{"cell_type":"markdown","source":["##**After merging data cols Now plotting graph**"],"metadata":{"id":"Yyie-txwgye3"}},{"cell_type":"code","source":["analysis_df = merge_df.dropna(subset=['classification'])"],"metadata":{"id":"V4u-wXxFgYol"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["summary = analysis_df.groupby('classification').agg({\n","    'Closed PnL': ['mean', 'median', 'sum'],\n","    'Size USD': 'sum'\n","}).reset_index()"],"metadata":{"id":"jXUKKteQhPzi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"\\nPerformance Summary by Sentiment:\")\n","print(summary)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODr2QlMVhXXx","executionInfo":{"status":"ok","timestamp":1754805223952,"user_tz":-330,"elapsed":48,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"73cc3380-0502-481a-ead3-5ec87d06e070"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Performance Summary by Sentiment:\n","  classification Closed PnL                           Size USD\n","                       mean median           sum           sum\n","0  Extreme Greed  25.418772    0.0  1.769655e+05  3.940677e+07\n","1           Fear  50.047622    0.0  6.699925e+06  7.041585e+08\n","2          Greed  87.894859    0.0  3.189617e+06  1.155037e+08\n","3        Neutral  22.229713    0.0  1.587424e+05  2.184323e+07\n"]}]},{"cell_type":"code","source":["# Bar chart - Total PnL by sentiment\n","plt.figure(figsize=(6,4))\n","sns.barplot(data=analysis_df, x='classification', y='Closed PnL', estimator=sum)\n","plt.title(\"Total Closed PnL by Market Sentiment\")\n","plt.ylabel(\"Total PnL (USD)\")\n","plt.xlabel(\"Sentiment\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"oapXnjuhisAj","executionInfo":{"status":"ok","timestamp":1754805299932,"user_tz":-330,"elapsed":25118,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"c2da116d-9927-4b96-b232-0a03ccfa9c8b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Boxplot - PnL distribution by sentiment\n","plt.figure(figsize=(6,4))\n","sns.boxplot(data=analysis_df, x='classification', y='Closed PnL')\n","plt.title(\"Closed PnL Distribution by Sentiment\")\n","plt.ylabel(\"PnL (USD)\")\n","plt.xlabel(\"Sentiment\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"v1axEJm5i4b6","executionInfo":{"status":"ok","timestamp":1754805391743,"user_tz":-330,"elapsed":1406,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"25f4a72e-00f7-44d0-fbc0-6bc084c90ae7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"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ERERPSWL7xF69913iwyAfvR29uxZAMDEiRPRqVMnBAUFYcyYMfjkk0/wxRdfIDc318yvwjTTpk1DVlaWdLt69aq5UyIiIqrSLL5HaNKkSRg6dOhjYwICAoxuDw4ORkFBAS5duoSGDRvC29sbN27ckMUY7nt7e0v/Gosp3G7Y5uPjI4tp3ry5FHPz5k3ZPgoKCpCRkSE93hi1Wg21Wv3Y10pERERlx+J7hDw8PNCoUaPH3gqP+Sns+PHjsLGxkU5ThYSEIC4uDvn5+VLMzp070bBhQ7i6ukoxu3btku1n586dCAkJAQD4+/vD29tbFpOdnY2EhAQpJiQkBJmZmUhMTJRidu/eDb1ej+Dg4DJ4V4iIiKhMVNDg7XJ38OBBsXjxYnH8+HFx4cIFsW7dOuHh4SGGDBkixWRmZgovLy/x2muviVOnTon169cLR0dHsWLFCinmwIEDwtbWVnz88cfizJkzIioqStjZ2YmTJ09KMfPnzxdarVZs3rxZJCUliT59+gh/f3/x4MEDKaZ79+6iRYsWIiEhQezfv1/Ur19fDB48uESvibPGiIiIno6p36FVphBKTEwUwcHBwsXFRdjb24vGjRuLDz/8UOTk5MjiTpw4IZ599lmhVqtFzZo1xfz584vs64cffhANGjQQKpVKBAYGiq1bt8ra9Xq9eP/994WXl5dQq9WiS5cuIiUlRRbz77//isGDBwtnZ2eh0WjEsGHDxJ07d0r0mlgIERERPR1Tv0MVQghh3j4pKk52djZcXFyQlZUFjUZj7nSIiIgqDVO/Qy1+jBARERFReWEhRERERFaLhRARERFZLRZCREREZLVYCBEREZHVYiFEREREVouFEBEREVktFkJERERktVgIERERkdViIURERERWi4UQERERWS0WQkRERGS1WAgRERGR1WIhRERERFaLhRARERFZLRZCREREZLVYCBEREZHVYiFEREREVouFEBEREVktFkJERERktVgIERERkdViIURERERWi4UQERERWS0WQkRERGS1WAgRERGR1WIhRERERFaLhRARERFZLRZCREREZLVYCBEREZHVYiFEREREVouFEBEREVktFkJERERktVgIERERkdViIURERERWi4UQERERWS0WQkRERGS1WAgRERGR1WIhRERERFaLhRARERFZLRZCREREZLVYCBEREZHVYiFERERE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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Timeline plot - Average daily PnL vs sentiment\n","daily_pnl = analysis_df.groupby(['date', 'classification'])['Closed PnL'].mean().reset_index()\n","plt.figure(figsize=(12,5))\n","sns.lineplot(data=daily_pnl, x='date', y='Closed PnL', hue='classification')\n","plt.title(\"Average Daily PnL by Sentiment Over Time\")\n","plt.ylabel(\"Average PnL (USD)\")\n","plt.xlabel(\"Date\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"KtsztRuIjUpW","executionInfo":{"status":"ok","timestamp":1754805400932,"user_tz":-330,"elapsed":1080,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"734a23bf-095a-4584-f901-685dd88b1a84"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **Deep ANalysis and Relation BEtween**"],"metadata":{"id":"OtrY31EAj9zW"}},{"cell_type":"code","source":["# --- 1. Correlation Analysis ---\n","# Ensure sentiment value is numeric\n","if 'value' in analysis_df.columns:\n","    corr = analysis_df['value'].corr(analysis_df['Closed PnL'])\n","    print(f\"Correlation between Sentiment Index and Closed PnL: {corr:.4f}\")\n","else:\n","    print(\"No numeric sentiment index ('value') column found in data.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GdBVMouvjW-C","executionInfo":{"status":"ok","timestamp":1754805612958,"user_tz":-330,"elapsed":51,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"c5f56d51-8ab3-40a0-c78c-02a509e88a10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Correlation between Sentiment Index and Closed PnL: 0.0111\n"]}]},{"cell_type":"code","source":["# --- 2. Win/Loss Rate by Sentiment ---\n","analysis_df['is_win'] = analysis_df['Closed PnL'] > 0\n","win_loss_summary = analysis_df.groupby('classification')['is_win'].agg(\n","    win_rate=lambda x: np.mean(x) * 100,\n","    loss_rate=lambda x: (1 - np.mean(x)) * 100\n",").reset_index()\n","\n","print(\"\\nWin/Loss Rate by Sentiment:\")\n","print(win_loss_summary)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gXAumTOWkK-z","executionInfo":{"status":"ok","timestamp":1754805658783,"user_tz":-330,"elapsed":81,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"c93086e7-8e8d-4388-ce6c-a3590f199d2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Win/Loss Rate by Sentiment:\n","  classification   win_rate  loss_rate\n","0  Extreme Greed  49.008905  50.991095\n","1           Fear  41.514592  58.485408\n","2          Greed  44.647138  55.352862\n","3        Neutral  31.718247  68.281753\n"]},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-2695613964.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  analysis_df['is_win'] = analysis_df['Closed PnL'] > 0\n"]}]},{"cell_type":"code","source":["\n","plt.figure(figsize=(7, 5))\n","sns.barplot(data=win_loss_summary, x='classification', y='win_rate', palette='viridis')\n","plt.title(\"Win Rate by Market Sentiment\")\n","plt.ylabel(\"Win Rate (%)\")\n","plt.xlabel(\"Sentiment\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":598},"id":"dztiiTAEkWKR","executionInfo":{"status":"ok","timestamp":1754805719230,"user_tz":-330,"elapsed":296,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"cd73e857-02b3-48a0-8721-bb60221fb642"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-2870899462.py:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=win_loss_summary, x='classification', y='win_rate', palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 700x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## **boldrisk-adjusted and leverage-aware analysis text**"],"metadata":{"id":"zs5ZDjNDm8cp"}},{"cell_type":"markdown","source":["I am not going build project that look like major I just want make that you ask to fulfill youe reqn because according datasets it has been a lot things with like first handling missind values we can use pca on this feature extraction . So I just going to be build that you ask. Thanks for reading.\n"],"metadata":{"id":"khUrwbYAoGKt"}},{"cell_type":"code","source":["df = analysis_df.copy()"],"metadata":{"id":"PxDBeAO3kk22"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Column shortcuts\n","pnl, size, sent = 'Closed PnL', 'Size USD', 'classification'\n"],"metadata":{"id":"awWqWIUWnJvG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[pnl] = pd.to_numeric(df[pnl], errors='coerce').fillna(0)\n","df[size] = pd.to_numeric(df[size], errors='coerce').fillna(0)"],"metadata":{"id":"v7XrOY4VoE3x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Win flag\n","df['is_win'] = df[pnl] > 0\n"],"metadata":{"id":"FHsrWzUPosxh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# }-- Leverage buckets ---\n","if 'leverage' in df.columns:\n","    df['lev_bucket'] = pd.cut(pd.to_numeric(df['leverage'], errors='coerce'),\n","                               bins=[0,1,2,5,10,25,100],\n","                               labels=['<=1x','1-2x','2-5x','5-10x','10-25x','25-100x'])\n","    df.loc[df['lev_bucket'].isna(), 'lev_bucket'] = 'NoLeverageInfo'\n","else:\n","    df['lev_bucket'] = 'NoLeverageInfo'\n"],"metadata":{"id":"1o9Y5gQMowpz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Summary by sntiment × leverage ---\n","summary = df.groupby([sent,'lev_bucket']).agg(\n","    pnl_mean=(pnl,'mean'),\n","    pnl_median=(pnl,'median'),\n","    pnl_sum=(pnl,'sum'),\n","    pnl_std=(pnl,'std'),\n","    win_rate=('is_win','mean'),\n","    vol_sum=(size,'sum'),\n","    vol_mean=(size,'mean')\n",").reset_index()\n","\n","summary['win_rate'] = summary['win_rate']*100\n","summary['pnl_sharpe'] = summary['pnl_mean'] / summary['pnl_std']"],"metadata":{"id":"vmI8Cvq5o0Y1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Top 5% trades contributio ---\n","p95 = df[size].quantile(0.95)\n","top5 = df[df[size] >= p95]"],"metadata":{"id":"O4r090zho3vI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["total_pnl_by_sent = df.groupby(sent)[pnl].sum().reset_index().rename(columns={pnl:'total_pnl'})\n","top5_pnl_by_sent = top5.groupby(sent)[pnl].sum().reset_index().rename(columns={pnl:'top5_pnl'})\n","contrib = total_pnl_by_sent.merge(top5_pnl_by_sent, on=sent, how='left').fillna(0)\n","contrib['top5_share'] = contrib['top5_pnl'] / contrib['total_pnl']"],"metadata":{"id":"hlPrxaqeo6BE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # --- Save outputs ---\n","# summary.to_csv('outputs/pnl_sentiment_leverage_summary.csv', index=False)\n","# contrib.to_csv('outputs/top5_contribution_by_sentiment.csv', index=False)"],"metadata":{"id":"8DLiLoTJpHgp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","\n","os.makedirs(\"outputs\", exist_ok=True)\n","os.makedirs(\"outputs/plots\", exist_ok=True)\n"],"metadata":{"id":"mQoIPSsApKvr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["summary.to_csv('outputs/pnl_sentiment_leverage_summary.csv', index=False)\n","contrib.to_csv('outputs/top5_contribution_by_sentiment.csv', index=False)\n"],"metadata":{"id":"ddktuyDrpR8g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# --- Show results ---\n","print(\"\\nPnL & Win Rate by Sentiment × Leverage:\")\n","print(summary.head(10).to_string(index=False))\n","print(\"\\nTop 5% Trade Contribution by Sentiment:\")\n","print(contrib.to_string(index=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"io3JKsgmpXPl","executionInfo":{"status":"ok","timestamp":1754807013114,"user_tz":-330,"elapsed":11,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"4bf23f35-97fa-48ee-cdc7-0162878955aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","PnL & Win Rate by Sentiment × Leverage:\n","classification     lev_bucket  pnl_mean  pnl_median      pnl_sum     pnl_std  win_rate      vol_sum    vol_mean  pnl_sharpe\n"," Extreme Greed NoLeverageInfo 25.418772         0.0 1.769655e+05  306.166937 49.008905  39406770.25 5660.265764    0.083023\n","          Fear NoLeverageInfo 50.047622         0.0 6.699925e+06  909.121796 41.514592 704158492.98 5259.977837    0.055051\n","         Greed NoLeverageInfo 87.894859         0.0 3.189617e+06 1148.343968 44.647138 115503671.85 3182.883845    0.076541\n","       Neutral NoLeverageInfo 22.229713         0.0 1.587424e+05  633.704815 31.718247  21843234.35 3058.848110    0.035079\n","\n","Top 5% Trade Contribution by Sentiment:\n","classification    total_pnl     top5_pnl  top5_share\n"," Extreme Greed 1.769655e+05 3.292254e+03    0.018604\n","          Fear 6.699925e+06 3.645299e+06    0.544080\n","         Greed 3.189617e+06 1.057418e+06    0.331519\n","       Neutral 1.587424e+05 1.115353e+04    0.070262\n"]}]},{"cell_type":"markdown","source":["It become mess so i ill format it, So you will br check properly and understand"],"metadata":{"id":"TUumYZuWqPcF"}},{"cell_type":"code","source":["def format_number(x):\n","    if abs(x) >= 1_000_000:\n","        return f\"{x/1_000_000:.2f}M\"\n","    elif abs(x) >= 1_000:\n","        return f\"{x/1_000:.2f}K\"\n","    else:\n","        return f\"{x:.2f}\"\n","\n"],"metadata":{"id":"eTRpUnX0qCkM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# # Copy to avoid messing original\n","# summary_fmt = summary.copy()\n","# contrib_fmt = contrib.copy()"],"metadata":{"id":"6qqGGpipqge0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # Format summary\n","# summary_fmt['pnl_mean'] = summary_fmt['pnl_mean'].apply(format_number)\n","# summary_fmt['pnl_median'] = summary_fmt['pnl_median'].apply(format_number)\n","# summary_fmt['pnl_sum'] = summary_fmt['pnl_sum'].apply(format_number)\n","# summary_fmt['pnl_std'] = summary_fmt['pnl_std'].apply(format_number)\n","# summary_fmt['win_rate'] = summary_fmt['win_rate'].apply(lambda x: f\"{x:.2f}%\")\n","# summary_fmt['vol_sum'] = summary_fmt['vol_sum'].apply(format_number)\n","# summary_fmt['vol_mean'] = summary_fmt['vol_mean'].apply(format_number)\n","# summary_fmt['pnl_sharpe'] = summary_fmt['pnl_sharpe'].apply(lambda x: f\"{x:.3f}\")\n","\n","# # Format contrib\n","# contrib_fmt['total_pnl'] = contrib_fmt['total_pnl'].apply(format_number)\n","# contrib_fmt['top5_pnl'] = contrib_fmt['top5_pnl'].apply(format_number)\n","# contrib_fmt['top5_share'] = contrib_fmt['top5_share'].apply(lambda x: f\"{x*100:.2f}%\")"],"metadata":{"id":"z6TdNNI8qlyb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# print(\"\\nPnL & Win Rate by Sentiment × Leverage (formatted):\")\n","# print(summary_fmt.to_string(index=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uxF_nIFhqp-h","executionInfo":{"status":"ok","timestamp":1754807323441,"user_tz":-330,"elapsed":43,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"eaaa1646-b96a-4d01-af24-207870129f7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","PnL & Win Rate by Sentiment × Leverage (formatted):\n","classification     lev_bucket pnl_mean pnl_median pnl_sum pnl_std win_rate vol_sum vol_mean pnl_sharpe\n"," Extreme Greed NoLeverageInfo    25.42       0.00 176.97K  306.17   49.01%  39.41M    5.66K      0.083\n","          Fear NoLeverageInfo    50.05       0.00   6.70M  909.12   41.51% 704.16M    5.26K      0.055\n","         Greed NoLeverageInfo    87.89       0.00   3.19M   1.15K   44.65% 115.50M    3.18K      0.077\n","       Neutral NoLeverageInfo    22.23       0.00 158.74K  633.70   31.72%  21.84M    3.06K      0.035\n"]}]},{"cell_type":"markdown","source":["### Actually dont need to formatted it it looks good enough to understand"],"metadata":{"id":"v-n3NY7MrJCR"}},{"cell_type":"code","source":["summary"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"ykcvYkBHqslP","executionInfo":{"status":"ok","timestamp":1754807390466,"user_tz":-330,"elapsed":99,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"3985df1f-1e0c-4779-d374-3854221b3d01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  classification      lev_bucket   pnl_mean  pnl_median       pnl_sum  \\\n","0  Extreme Greed  NoLeverageInfo  25.418772         0.0  1.769655e+05   \n","1           Fear  NoLeverageInfo  50.047622         0.0  6.699925e+06   \n","2          Greed  NoLeverageInfo  87.894859         0.0  3.189617e+06   \n","3        Neutral  NoLeverageInfo  22.229713         0.0  1.587424e+05   \n","\n","       pnl_std   win_rate       vol_sum     vol_mean  pnl_sharpe  \n","0   306.166937  49.008905  3.940677e+07  5660.265764    0.083023  \n","1   909.121796  41.514592  7.041585e+08  5259.977837    0.055051  \n","2  1148.343968  44.647138  1.155037e+08  3182.883845    0.076541  \n","3   633.704815  31.718247  2.184323e+07  3058.848110    0.035079  "],"text/html":["\n","  <div id=\"df-432a0019-4028-44cd-bcba-87c82ecd9c10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>classification</th>\n","      <th>lev_bucket</th>\n","      <th>pnl_mean</th>\n","      <th>pnl_median</th>\n","      <th>pnl_sum</th>\n","      <th>pnl_std</th>\n","      <th>win_rate</th>\n","      <th>vol_sum</th>\n","      <th>vol_mean</th>\n","      <th>pnl_sharpe</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Extreme Greed</td>\n","      <td>NoLeverageInfo</td>\n","      <td>25.418772</td>\n","      <td>0.0</td>\n","      <td>1.769655e+05</td>\n","      <td>306.166937</td>\n","      <td>49.008905</td>\n","      <td>3.940677e+07</td>\n","      <td>5660.265764</td>\n","      <td>0.083023</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Fear</td>\n","      <td>NoLeverageInfo</td>\n","      <td>50.047622</td>\n","      <td>0.0</td>\n","      <td>6.699925e+06</td>\n","      <td>909.121796</td>\n","      <td>41.514592</td>\n","      <td>7.041585e+08</td>\n","      <td>5259.977837</td>\n","      <td>0.055051</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Greed</td>\n","      <td>NoLeverageInfo</td>\n","      <td>87.894859</td>\n","      <td>0.0</td>\n","      <td>3.189617e+06</td>\n","      <td>1148.343968</td>\n","      <td>44.647138</td>\n","      <td>1.155037e+08</td>\n","      <td>3182.883845</td>\n","      <td>0.076541</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Neutral</td>\n","      <td>NoLeverageInfo</td>\n","      <td>22.229713</td>\n","      <td>0.0</td>\n","      <td>1.587424e+05</td>\n","      <td>633.704815</td>\n","      <td>31.718247</td>\n","      <td>2.184323e+07</td>\n","      <td>3058.848110</td>\n","      <td>0.035079</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-432a0019-4028-44cd-bcba-87c82ecd9c10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-432a0019-4028-44cd-bcba-87c82ecd9c10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-432a0019-4028-44cd-bcba-87c82ecd9c10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2a3c915b-3614-42f8-a0b9-cda4c2f82c6c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a3c915b-3614-42f8-a0b9-cda4c2f82c6c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2a3c915b-3614-42f8-a0b9-cda4c2f82c6c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_13832476-74ef-45dc-af81-8e7384c31f63\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('summary')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_13832476-74ef-45dc-af81-8e7384c31f63 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('summary');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"summary","summary":"{\n  \"name\": \"summary\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Fear\",\n          \"Neutral\",\n          \"Extreme Greed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lev_bucket\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NoLeverageInfo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pnl_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.32899137739737,\n        \"min\": 22.229712656210616,\n        \"max\": 87.8948589207749,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          50.047621894017375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pnl_median\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pnl_sum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3108066.6448129495,\n        \"min\": 158742.378078,\n        \"max\": 6699925.190574,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6699925.190574\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pnl_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 362.63307797384056,\n        \"min\": 306.1669373872389,\n        \"max\": 1148.343967656218,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          909.121795680177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"win_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.343330812907954,\n        \"min\": 31.71824674415348,\n        \"max\": 49.008905486929045,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          41.51459240612231\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vol_sum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 325171103.3249189,\n        \"min\": 21843234.35,\n        \"max\": 704158492.98,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          704158492.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"vol_mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1361.3627303334715,\n        \"min\": 3058.8481095084726,\n        \"max\": 5660.265764148233,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5259.977836723413\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pnl_sharpe\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.021799826700095375,\n        \"min\": 0.03507897072348999,\n        \"max\": 0.08302259014756831,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.055050513728551936\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["contrib\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"6-qHtG04q6Or","executionInfo":{"status":"ok","timestamp":1754807417188,"user_tz":-330,"elapsed":72,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"cef645e3-5519-424c-e85a-a2a64b84e3c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  classification     total_pnl      top5_pnl  top5_share\n","0  Extreme Greed  1.769655e+05  3.292254e+03    0.018604\n","1           Fear  6.699925e+06  3.645299e+06    0.544080\n","2          Greed  3.189617e+06  1.057418e+06    0.331519\n","3        Neutral  1.587424e+05  1.115353e+04    0.070262"],"text/html":["\n","  <div id=\"df-295d20a9-ebbc-4340-817a-bd35181f537f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>classification</th>\n","      <th>total_pnl</th>\n","      <th>top5_pnl</th>\n","      <th>top5_share</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Extreme Greed</td>\n","      <td>1.769655e+05</td>\n","      <td>3.292254e+03</td>\n","      <td>0.018604</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Fear</td>\n","      <td>6.699925e+06</td>\n","      <td>3.645299e+06</td>\n","      <td>0.544080</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Greed</td>\n","      <td>3.189617e+06</td>\n","      <td>1.057418e+06</td>\n","      <td>0.331519</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Neutral</td>\n","      <td>1.587424e+05</td>\n","      <td>1.115353e+04</td>\n","      <td>0.070262</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-295d20a9-ebbc-4340-817a-bd35181f537f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-295d20a9-ebbc-4340-817a-bd35181f537f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-295d20a9-ebbc-4340-817a-bd35181f537f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-96596b72-97cb-46c2-ba6f-261838673dd1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96596b72-97cb-46c2-ba6f-261838673dd1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-96596b72-97cb-46c2-ba6f-261838673dd1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_76bd9c1d-af92-44d0-a2d8-616a1fb87517\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('contrib')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_76bd9c1d-af92-44d0-a2d8-616a1fb87517 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('contrib');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"contrib","summary":"{\n  \"name\": \"contrib\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Fear\",\n          \"Neutral\",\n          \"Extreme Greed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_pnl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3108066.6448129495,\n        \"min\": 158742.378078,\n        \"max\": 6699925.190574,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6699925.190574,\n          158742.378078,\n          176965.491774\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top5_pnl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1716931.7924250825,\n        \"min\": 3292.254155999996,\n        \"max\": 3645298.515712,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3645298.515712,\n          11153.533929999996,\n          3292.254155999996\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top5_share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2440374954769951,\n        \"min\": 0.01860393302104619,\n        \"max\": 0.5440804803075269,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.5440804803075269,\n          0.07026185486851892,\n          0.01860393302104619\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# --- 1. PnL mean & win rate ---\n","fig, ax1 = plt.subplots(figsize=(8,5))\n","\n","sns.barplot(\n","    data=summary,\n","    x=\"classification\",\n","    y=\"pnl_mean\",\n","    hue=\"lev_bucket\",\n","    ax=ax1,\n","    palette=\"viridis\"\n",")\n","ax1.set_ylabel(\"PnL Mean\")\n","ax1.set_title(\"PnL Mean by Sentiment × Leverage\")\n","ax1.legend(title=\"Leverage Bucket\")\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"CZcUQaNHrDdU","executionInfo":{"status":"ok","timestamp":1754807534875,"user_tz":-330,"elapsed":403,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"215e3e2a-1fef-43be-b585-5071f5afae8b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# --- 2. Win rate by sentiment ---\n","plt.figure(figsize=(8,5))\n","sns.barplot(\n","    data=summary,\n","    x=\"classification\",\n","    y=\"win_rate\",\n","    hue=\"lev_bucket\",\n","    palette=\"Set2\"\n",")\n","plt.ylabel(\"Win Rate (%)\")\n","plt.title(\"Win Rate by Sentiment × Leverage\")\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"6EZCME8jrgFt","executionInfo":{"status":"ok","timestamp":1754807664588,"user_tz":-330,"elapsed":535,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"b5b2dc29-b26c-4ea4-de89-84bfa291f912"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# --- 3. Top 5% share ---\n","plt.figure(figsize=(7,5))\n","sns.barplot(\n","    data=contrib,\n","    x=\"classification\",\n","    y=\"top5_share\",\n","    palette=\"mako\"\n",")\n","plt.ylabel(\"Top 5% Share of PnL\")\n","plt.title(\"Top 5% Trade Contribution by Sentiment\")\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":618},"id":"PVLBnJS7rkhv","executionInfo":{"status":"ok","timestamp":1754807580367,"user_tz":-330,"elapsed":609,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"31fece5f-807c-4b98-b360-132cea497156"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-571125271.py:3: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 700x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"RJRm6uR9rrKW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","summary.to_csv(\"outputs/pnl_sentiment_leverage_summary.csv\", index=False)\n","contrib.to_csv(\"outputs/top5_contribution_by_sentiment.csv\", index=False)\n","\n","# Save as Excel\n","summary.to_excel(\"outputs/pnl_summary.xlsx\", index=False)\n"],"metadata":{"id":"gBtmdGVstoa5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.savefig(\"outputs/pnl_mean_by_sentiment.png\", dpi=300, bbox_inches=\"tight\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ylLXPvwEto2d","executionInfo":{"status":"ok","timestamp":1754808107890,"user_tz":-330,"elapsed":117,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}},"outputId":"94d3db9b-6d52-4550-a624-bfa4f1f299a0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["\n"],"metadata":{"id":"Nsv2mtIVtsEq","executionInfo":{"status":"ok","timestamp":1754808419874,"user_tz":-330,"elapsed":5,"user":{"displayName":"Musa Qureshi","userId":"03669322794325875919"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"3axQ-oImu2pS"},"execution_count":null,"outputs":[]}]}